[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "ocr_translate-hugging_face"
dynamic = ["version"] # read from ocr_translate_hugging_face/__init__.py
description = "Plugins to enable usage of HuggingFace Models in ocr_translate"
authors = []
readme = "README.md"
license = { file = "LICENSE.txt" }
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["django", "translation"]
requires-python = ">=3.12"
# -e git+ssh://git@github.com/Crivella/ocr_translate-hugging_face.git@c597e8372a89d1c3d163340e44415c5d66ecd116#egg=ocr_translate_hugging_face
#   -e git+ssh://git@github.com/Crivella/ocr_translate.git@bb919d6c7425544549999a6fb509c83ccad1801f#egg=django_ocr_translate
#     wheel==0.45.1
#     numpy==2.2.6
#     Django==5.2.4
#       asgiref==3.9.1
#       sqlparse==0.5.3
#       tzdata==2025.2
#     django-cors-headers==4.7.0
#       asgiref==3.9.1
#       Django==5.2.4
#         asgiref==3.9.1
#         sqlparse==0.5.3
#         tzdata==2025.2
#     pillow==11.3.0
#     opencv-python-headless==4.12.0.88
#       numpy==2.2.6
#   opencv-python-headless==4.12.0.88
#     numpy==2.2.6
#   torch==2.7.1
#     filelock==3.18.0
#     typing_extensions==4.14.1
#     sympy==1.14.0
#       mpmath==1.3.0
#     networkx==3.5
#     Jinja2==3.1.6
#       MarkupSafe==3.0.2
#     fsspec==2025.7.0
#     setuptools==80.9.0
#   torchvision==0.22.1
#     numpy==2.2.6
#     torch==2.7.1
#       filelock==3.18.0
#       typing_extensions==4.14.1
#       sympy==1.14.0
#         mpmath==1.3.0
#       networkx==3.5
#       Jinja2==3.1.6
#         MarkupSafe==3.0.2
#       fsspec==2025.7.0
#       setuptools==80.9.0
#     pillow==11.3.0
#   transformers==4.54.1
#     filelock==3.18.0
#     huggingface-hub==0.34.3
#       filelock==3.18.0
#       fsspec==2025.7.0
#       packaging==25.0
#       PyYAML==6.0.2
#       requests==2.32.4
#         charset-normalizer==3.4.2
#         idna==3.10
#         urllib3==2.5.0
#         certifi==2025.7.14
#       tqdm==4.67.1
#         colorama==0.4.6
#       typing_extensions==4.14.1
#     numpy==2.2.6
#     packaging==25.0
#     PyYAML==6.0.2
#     regex==2025.7.34
#     requests==2.32.4
#       charset-normalizer==3.4.2
#       idna==3.10
#       urllib3==2.5.0
#       certifi==2025.7.14
#     tokenizers==0.21.4
#       huggingface-hub==0.34.3
#         filelock==3.18.0
#         fsspec==2025.7.0
#         packaging==25.0
#         PyYAML==6.0.2
#         requests==2.32.4
#           charset-normalizer==3.4.2
#           idna==3.10
#           urllib3==2.5.0
#           certifi==2025.7.14
#         tqdm==4.67.1
#           colorama==0.4.6
#         typing_extensions==4.14.1
#     safetensors==0.5.3
#     tqdm==4.67.1
#       colorama==0.4.6
#   protobuf==6.31.1
#   fugashi==1.5.1
#   unidic-lite==1.0.8
#   sacremoses==0.1.1
#     regex==2025.7.34
#     click==8.2.1
#       colorama==0.4.6
#     joblib==1.5.1
#     tqdm==4.67.1
#       colorama==0.4.6
#   safetensors==0.5.3
dependencies = [
    "django-ocr_translate>=0.7.0,<1.0",

    "torch~=2.7.1",
    "torchvision~=0.22.1",
    "transformers~4.54.1",

    "protobuf~=6.31.1", # microsoft/trocr-small-printed: XLMRobertaConverter requires the protobuf library
    "fugashi~=1.5.1",
    "unidic-lite~=1.0.8",
    "sacremoses~=0.1.1",
    "safetensors~=0.5.3",
    # Needs `cmake` and `compiler` to be installed with newer python
    # "sentencepiece",  # Needed for most HuggingFace tokenizers
]

[project.urls]
Source = "https://github.com/Crivella/ocr_translate-hugging_face"

[project.optional-dependencies]
release = [
    "flit",
]
tests = [
    "pytest",
    "pytest-cov",
    "pytest-django",
]
pre-commit = [
    "pre-commit",
    "pylint",
    "pylint-pytest",
    "pylint-django",
]

[project.entry-points."ocr_translate.ocr_data"]
"ocr.hugginface.ved.khawhite" = "ocr_translate_hugging_face:khawhite_ocr_model_data"
"ocr.hugginface.ved.lucidsmall" = "ocr_translate_hugging_face:lucid_small_korean_ocr_model_data"
"ocr.hugginface.ved.microsoftprinted.small" = "ocr_translate_hugging_face:microsoft_small_trocr_printed_model_data"
"ocr.hugginface.ved.microsoftprinted.base" = "ocr_translate_hugging_face:microsoft_base_trocr_printed_model_data"
# "ocr.hugginface.ved.microsoftstage1.small" = "ocr_translate_hugging_face:microsoft_small_trocr_stage1_model_data"

[project.entry-points."ocr_translate.tsl_data"]
"tsl.hugginface.seq2seq.helsinki_zh_en" = "ocr_translate_hugging_face:helsinki_zh_en_tsl_model_data"
"tsl.hugginface.seq2seq.helsinki_ja_en" = "ocr_translate_hugging_face:helsinki_ja_en_tsl_model_data"
"tsl.hugginface.seq2seq.helsinki_ko_en" = "ocr_translate_hugging_face:helsinki_ko_en_tsl_model_data"
"tsl.hugginface.seq2seq.staka_ja_en" = "ocr_translate_hugging_face:staka_fugumt_ja_en_tsl_model_data"
"tsl.hugginface.seq2seq.fbm2m_418m" = "ocr_translate_hugging_face:facebook_m2m100_418m_tsl_model_data"
"tsl.hugginface.seq2seq.fbm2m_1_2b" = "ocr_translate_hugging_face:facebook_m2m100_1_2b_tsl_model_data"


[project.entry-points."ocr_translate.ocr_models"]
"hugginface.ved" = "ocr_translate_hugging_face.plugin:HugginfaceVEDModel"

[project.entry-points."ocr_translate.tsl_models"]
"hugginface.seq2seq" = "ocr_translate_hugging_face.plugin:HugginfaceSeq2SeqModel"

[tool.flit.module]
name = "ocr_translate_hugging_face"

[tool.flit.sdist]
exclude = [
    ".gitignore", ".github", ".pre-commit-config.yaml",
    "tests/", "tests/*",
    ]

[tool.pytest.ini_options]
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "settings"
log_cli = true
pythonpath = ["./tests"]

[tool.pylint.main]
load-plugins = [
    "pylint_pytest"
]

[tool.pylint.messages_control]
disable = [
    "logging-fstring-interpolation",
    "global-statement",
    "broad-exception-caught",
    "too-few-public-methods",
    "duplicate-code"
]


[tool.pylint.format]
max-line-length = 120
good-names = [
    "_",
    "l", "r", "b", "t",
    "l1", "r1", "b1", "t1",
    "l2", "r2", "b2", "t2",
    "i", "j",
    "k", "v",
    "f",
]

[tool.pylint.design]
max-args = 10
max-locals = 20
max-attributes = 12
